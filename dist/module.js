define(["@grafana/data","react","@emotion/css","@grafana/ui","d3"],((e,t,a,l,r)=>(()=>{"use strict";var n={644:e=>{e.exports=a},305:t=>{t.exports=e},388:e=>{e.exports=l},200:e=>{e.exports=r},650:e=>{e.exports=t}},s={};function i(e){var t=s[e];if(void 0!==t)return t.exports;var a=s[e]={exports:{}};return n[e](a,a.exports,i),a.exports}i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var a in t)i.o(t,a)&&!i.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var o={};return(()=>{i.r(o),i.d(o,{plugin:()=>u});var e=i(305),t=i(650),a=i.n(t),l=i(644),r=i(388),n=i(200);const s=e=>({wrapper:(0,l.css)({position:"relative"}),svg:l.css`
      position: absolute;
      top: 0;
      left: 0;
    `,zLabel:(0,l.css)({fontSize:"12px"}),speedLabel:(0,l.css)({fontSize:"14px"}),directionLabel:(0,l.css)({fontSize:"14px"}),axis:(0,l.css)({opacity:.7})}),c=(e,t,a)=>{const l=t-e,r=Math.ceil(l/a);return Array.from({length:r},((t,l)=>[e+l*a,e+(l+1)*a]))},d=(e,t,a=0)=>{if(null===e)return console.log("Unexpected value is null"),null;if(e<t[0][0])return null;const l=t.length,r=t[l-1];e>=r[1]&&(e-=a);for(let a=0;a<l;a++){const[l,r]=t[a];if(e>=l&&e<r)return a}return e===r[1]?l-1:(console.warn(`getIntervalIndex ${e} too big`),null)},u=new e.PanelPlugin((({options:i,data:o,width:u,height:p})=>{const m=(0,r.useTheme2)(),g=(0,r.useStyles2)(s);if(o.series.length<2)throw new Error("Minimum of 2 series required");const f=o.series.find(((e,t)=>{e.fields.some((e=>"speed"===e.name))}))||o.series[0],h=o.series.find(((e,t)=>{e.fields.some((e=>"direction"===e.name))}))||o.series[1],y=f.fields[1].values,x=h.fields[1].values,v=y.length>0?Math.max(...y):0,b=x.map(((e,t)=>[e,y[t]])).filter((([e,t])=>null!=t)),w=+i.slices,E=+i.start,S=""===i.step?Math.ceil(v/8):+parseInt(i.step,10),k=i.unit,$=360/w,N=c(-$/2,360-$/2,$),L=c(E,v,S),P=[...Array(N.length)].map((e=>Array(L.length).fill(0)));for(let e=0;e<b.length;e++){let t=d(b[e][0],N,360),a=d(b[e][1],L);null!=t&&null!=a&&P[t][a]++}const A=L.map((e=>e[0]+" - "+e[1])),I=[];for(let e=0;e<N.length;e++){const t={angle:N[e][0]};let a=0;for(let l=0;l<L.length;l++)a+=t[A[l]]=P[e][l];t.total=a,I.push(t)}if("percent"===i.scale){const e=n.sum(I,(e=>e.total)),t=n.scaleLinear([0,e],[0,1]);for(let e=0;e<I.length;e++)for(let a in I[e])"angle"!==a&&(I[e][a]=t(I[e][a]))}const M=u-40-80,O=p-40-40,R=Math.min(M,O)/2,V=[0,R],_=[0,2*Math.PI],z=n.scaleLinear([0,360],_),D=n.max(I,(e=>e.total))||0,j=n.scaleLinear([0,D],V),T=n.scaleOrdinal(A,["#4242f4","#42c5f4","#42f4ce","#42f456","#adf442","#f4e242","#f4a142","#f44242"]),B=n.scaleBand(I.map((e=>e.angle)),_).align(0).bandwidth(),U=((e,t,a=1)=>{const l=[];if(void 0===t&&(t=e,e=0),e<t&&a<=0||e>t&&a>=0)throw new Error("Step value causes infinite loop");if(e<t)for(let r=e;r<t;r+=a)l.push(r);else for(let r=e;r>t;r+=a)l.push(r);return l})(0,360,45),W=n.scaleLinear([0,8],_),C=n.scaleBand(U,_).align(0).bandwidth(),F=-360/U.length/2,q={0:"N",45:"NE",90:"E",135:"SE",180:"S",225:"SW",270:"W",315:"NW"},G=(0,e.getValueFormat)(k),X=n.scaleLinear([0,n.max(U,(e=>e))||0],V),H=({transform:e})=>{const l=(0,t.useRef)(null);return(0,t.useEffect)((()=>{if(l.current){const e=n.axisLeft(X).scale(X.copy().range([-0,-(R+10)])).ticks(0);n.select(l.current).call(e)}}),[e]),a().createElement("g",{ref:l,transform:e,className:g.axis})};return a().createElement("div",{className:(0,l.cx)(g.wrapper,l.css`
          width: ${u}px;
          height: ${p}px;
        `)},a().createElement("svg",{className:g.svg,xmlns:"http://www.w3.org/2000/svg",xmlnsXlink:"http://www.w3.org/1999/xlink",viewBox:`-${u/2} -${p/2} ${u} ${p}`,width:u,height:p},a().createElement("g",null,n.stack().keys(A)(I).map(((e,t)=>a().createElement("g",{key:t,fill:T(e.key),fillOpacity:i.opacity},e.map(((e,t)=>{var l;const r={innerRadius:j(e[0]),outerRadius:j(e[1]),startAngle:z(e.data.angle),endAngle:z(e.data.angle)+B};var s;return a().createElement("path",{key:t,d:null!==(s=null===(l=n.arc().innerRadius((()=>j(e[0]))).outerRadius((()=>j(e[1]))).startAngle((()=>z(e.data.angle))).endAngle((()=>z(e.data.angle)+B)).padAngle(.01).padRadius(0)(r))||void 0===l?void 0:l.toString())&&void 0!==s?s:void 0})}))))),U.map(((e,t)=>{var l;return a().createElement("g",{key:t,textAnchor:"middle",transform:`rotate(${180*(z(e)+C/2)/Math.PI-(90-F)})translate(${R+30},0)`},a().createElement("text",{transform:`rotate(${90-e})`,fill:m.colors.text.secondary,className:g.directionLabel},"compass"===i.x_grid&&null!==(l=q[e])&&void 0!==l?l:e))})),a().createElement("g",{className:"axis"},n.range(W.domain()[1]).map(((e,t)=>a().createElement("g",{key:t,className:"axis"},a().createElement(H,{key:t,transform:`rotate(${180*W(e)/Math.PI})`}))))),a().createElement("g",{textAnchor:"middle"},j.ticks(i.rings).slice(1).map(((e,t)=>a().createElement("g",{key:t},a().createElement("circle",{fill:"none",stroke:m.colors.border.strong,strokeDasharray:"4,4",r:j(e)}),a().createElement("text",{y:-j(e),dy:"-0.35em",x:-10,fill:m.colors.text.secondary,className:g.speedLabel},j.tickFormat(5,"percent"===i.scale?"%":"s")(e)))))),A.slice().reverse().map(((e,t)=>a().createElement("g",{key:t,transform:`translate(${R+30}, ${40-R+20*(t-A.length/2)})`},a().createElement("rect",{width:18,height:18,fill:T(e)}),a().createElement("text",{x:24,y:9,dy:"0.35em",fill:m.colors.text.primary,className:g.zLabel},`${e}${G(t).suffix}`)))))))})).setPanelOptions((e=>e.addSliderInput({category:["Display"],path:"opacity",name:"Opacity",settings:{min:0,max:1,step:.05},defaultValue:.6}).addNumberInput({category:["Direction"],path:"slices",name:"Cake slices",settings:{min:1,integer:!0},defaultValue:32}).addRadio({category:["Direction"],path:"x_grid",name:"Grid labels",defaultValue:"degrees",settings:{options:[{value:"degrees",label:"Degrees"},{value:"compass",label:"Compass"}]}}).addSliderInput({category:["Speed"],path:"rings",name:"Rings",settings:{min:1,max:16,integer:!0},defaultValue:5}).addNumberInput({category:["Speed"],path:"start",name:"Start",settings:{min:0},defaultValue:0}).addTextInput({category:["Speed"],path:"step",name:"Step",defaultValue:""}).addUnitPicker({category:["Speed"],path:"unit",name:"Unit",defaultValue:"velocityms"}).addRadio({category:["Speed"],path:"scale",name:"Scale",defaultValue:"absolute",settings:{options:[{value:"absolute",label:"Absolute"},{value:"percent",label:"Percent"}]}})))})(),o})()));
//# sourceMappingURL=module.js.map